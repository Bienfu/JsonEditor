import React, { useState, useCallback } from "react";
import swaggerSchema from "./swagger schema.json";
import schemaData from "./JSONSchema.json";
export const DataTypes = [
  {
    typeName: "Person",
    schema: "#/definitions/user",
    typeCheckFields: ["firstName", "lastName"],
    icon: "fas fa-user",
    // display: (key, firstName, lastName) => `${key}: ${firstName} ${lastName} `,
    display: ["firstName", "lastName"],
    display2: (firstName, lastName) => `${firstName} ${lastName} `,
    include: [],
    includeDetail: ["firstName", "lastName"],
    isEditable: ["lastName"],
    schemaFile: schemaData,
    blank: {
      firstName: "firstName",
      lastName: "lastName",
      phoneNumber: "Phone Number",
      emailAddress: "Email Address",
    },
    canChange: true,
  },
  {
    typeName: "Address",
    schema: "#/definitions/address",
    typeCheckFields: ["city", "street", "zipcode"],
    icon: "fas fa-map-marker-alt",
    // display: (street, city, state, zipcode) =>
    //   `${street}, ${city}, ${state} ${zipcode}`,
    display: ["street", "city", "state", "zipcode"],
    include: [],
    includeDetail: ["state", "zipcode"],
    isEditable: ["street", "city", "state", "zipcode"],
    schemaFile: schemaData,
    blank: {
      street: "street",
      city: "city",
      state: "state",
      zipcode: "zipcode",
    },
    canChange: false,
  },
  {
    typeName: "Department",
    schema: "#/definitions/department",
    typeCheckFields: ["name", "budget"],
    icon: "fas fa-building",
    // display: (name) => `${name}`,
    display: ["name"],
    include: [],
    includeDetail: ["name"],
    isEditable: ["name"],
    schemaFile: schemaData,
    blankDepartment: {
      name: "DepartmentName",
      budget: "$???",
      executive: {
        userId: 1,
        firstName: "FirstName",
        lastName: "LastName",
        phoneNumber: "phone number",
        emailAddress: "email address",
      },
      users: [
        {
          userId: 1,
          firstName: "FirstName",
          lastName: "LastName",
          phoneNumber: "phone number",
          emailAddress: "email address",
        },
      ],
      employees: [
        {
          employeeId: 1,
          firstName: "FirstName",
          lastName: "LastName",
          phoneNumber: "phone number",
          emailAddress: "email address",
        },
      ],
    },
    canChange: true,
  },
  {
    typeName: "Company",
    schema: "#/definitions/company",
    typeCheckFields: ["name", "address"],
    icon: "fas fa-building",
    // display: (name) => `${name}`,
    display: ["name"],
    include: [],
    includeDetail: ["name"],
    isEditable: ["name"],
    schemaFile: schemaData,
    blankCompany: {
      name: "Company Name",
      address: {
        street: "Street name",
        city: "City Name",
        state: "State",
        zipcode: "zipcode",
      },
      departments: [
        {
          name: "Department Name",
          budget: "$??",
          executive: {
            userId: 1,
            firstName: "FirstName",
            lastName: "LastName",
            phoneNumber: "phone number",
            emailAddress: "email address",
          },
          users: [
            {
              userId: 1,
              firstName: "FirstName",
              lastName: "LastName",
              phoneNumber: "phone number",
              emailAddress: "email address",
            },
          ],
          employees: [
            {
              employeeId: 1,
              firstName: "FirstName",
              lastName: "LastName",
              phoneNumber: "phone number",
              emailAddress: "email address",
            },
          ],
        },
      ],
    },
    canChange: true,
  },
  {
    typeName: "Account",
    schema: "#/components/schemas/Job/properties/account",
    typeCheckFields: ["displayName", "id", "type", "uri"],
    icon: "fas fa-user",
    display: ["displayName"],
    include: [],
    includeDetail: ["id", "displayName", "type", "uri"],
    isEditable: ["displayName"],
    schemaFile: swaggerSchema,
    blank: {
      displayName: "tempName",
      id: "AA:XXX",
      type: "Account",
      uri: "/account/v1/accounts/XXXX",
    },
    canChange: false,
  },
  {
    typeName: "BaseState",
    schema: "#/components/schemas/Job/properties",
    typeCheckFields: ["code", "name"],
    icon: "fas fa-user",
    display: ["name"],
    include: [],
    includeDetail: ["name"],
    isEditable: ["name"],
    schemaFile: swaggerSchema,
    blank: {
      code: "AA",
      name: "StateName"
    },
    canChange: false,
  },
  {
    typeName: "Job",
    schema: "#/components/schemas/Job/properties",
    typeCheckFields: [],
    icon: "fas fa-user",
    display: ["id"],
    include: [],
    includeDetail: ["id", "createdDate"],
    isEditable: ["id"],
    schemaFile: swaggerSchema,
    blank: {
      code: "AA",
      name: "StateName"
    },
    canChange: false,
  },
];
